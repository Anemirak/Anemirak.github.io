<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OpenWrt</title>
    <link href="/2024/08/28/OpenWrt/"/>
    <url>/2024/08/28/OpenWrt/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenWrt路由器"><a href="#OpenWrt路由器" class="headerlink" title="OpenWrt路由器"></a>OpenWrt路由器</h1><p>OpenWrt 项目是一个针对嵌入式设备的 Linux 操作系统，提供了具有软件包管理功能的完全可写的文件系统通过使用适配任何应用的软件包来定制设备。</p><p>#####文件系统布局</p><p>&#x2F;etc: 这个目录包含了大部分的配置文件。具体配置文件包括：<br>&#x2F;etc&#x2F;config&#x2F;：包含主要的配置文件，例如网络配置 (network)、无线设置 (wireless)、防火墙设置 (firewall) 等。</p><p>&#x2F;etc&#x2F;config&#x2F;network: 配置网络接口和网络设置。可以在这里设置静态 IP、DHCP 客户端、桥接等。<br>&#x2F;etc&#x2F;config&#x2F;wireless: 配置无线网络接口，包括 SSID、加密类型、无线模式等。<br>&#x2F;etc&#x2F;config&#x2F;firewall: 配置防火墙规则，包括 NAT 和过滤规则。<br>&#x2F;etc&#x2F;config&#x2F;system: 系统设置，包括主机名、时区和其他系统级别的配置。<br>&#x2F;etc&#x2F;config&#x2F;dhcp: 配置 DHCP 服务器和 DHCP 选项。</p><p>&#x2F;etc&#x2F;init.d&#x2F;：包含系统服务的启动脚本，可以用来启动、停止和重启服务。</p><p>&#x2F;lib: 包含了系统库和脚本</p><p><img src="D:\hexo\hexo-hang-blog\blog\source_posts\OpenWrt\图片1.png" alt="图片"></p><p>#####常用命令</p><figure class="highlight plaintext"><figcaption><span>wifi所有的配置文件  qcawificfg80211.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs lib/wifi/">/etc/config 配置文件<br><br>vi /ect/config/wireless<br><br>/etc/config/dhcp    //网络服务配置<br><br>/etc/config/network   //网络接口配置<br><br>/etc/config/firewall    //防火墙配置<br><br>cat /etc/config/network  //查看配置<br><br>uci show network  //uci配置查看命令<br><br>uci set network.lan.proto=dhcp  //配置动态获取<br><br>uci set network.lan.proto=&#x27;static&#x27;  //配置静态IP<br><br>uci set network.lan.ipaddr=&#x27;192.168.10.100&#x27;  //设置LAN口的IP地址<br><br>uci set network.lan.netmask=&#x27;255.255.255.0&#x27; //设置LAN口的子网掩码<br><br>uci set network.lan.gateway=&#x27;192.168.10.1&#x27;  //设置LAN口的网关地址<br><br>uci set network.lan.dns=&#x27;8.8.8.8&#x27; //设置DNS服务器地址<br><br>uci set network.lan.dns=&#x27;8.8.8.8 8.8.4.4&#x27;   //多个DNS服务器<br><br>uci commit network  //保存修改后的配置<br><br>/etc/init.d/network restart  //重启网络<br><br>brctl show  //查看桥<br><br>hotplug热插拔<br><br>/etc/hotplug.d/button<br><br>vim 51-wps-reset   //长按wps键输出“自定义语句”，松开后重启<br><br>ubus list  显示所有的注册的服务<br><br>ubus -v list 显示更详细的信息<br><br>ubus -v list network.device：显示某个服务注册的功能<br><br>ps |grep lighttp<br><br>vi /etc/lighttpd/lighttpd.conf<br><br>ps |grep uhttp<br><br>/etc/init.d/lighttpd restart<br><br>/etc/init.d/uhttpd restart<br><br>ethtool eth0 //查看接口的工作协议（全双工、半双工） <br><br></code></pre></td></tr></table></figure><p>#####创建和维护自定义 OpenWrt 软件包，编写 Makefile 和配置文件</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mkdir package/helloworld<br><span class="hljs-keyword">cd</span> package/helloworld/<br>mkdir src<br><span class="hljs-keyword">cd</span> src/<br>vim helloworld.c  <span class="hljs-string">//</span>编写C程序<br>vim makefile  <span class="hljs-string">//</span>编写编译指令，将C源程序编译为可执行文件<br><span class="hljs-keyword">cd</span> <span class="hljs-string">../</span><br>vim Makefile  <span class="hljs-string">//</span>编写主Makefile，编译和安装软件包<br>make menuconfig  <span class="hljs-string">//</span>选择软件包helloworld 并标记为编译<br>make <span class="hljs-string">./package/helloworld/</span>&#123;clean,prepare,compile&#125; V=s  <span class="hljs-string">//</span>编译软件包<br>bin/ipq/<span class="hljs-string">./packages/base/helloworld_1.0-1_ipq.ipk</span>   <span class="hljs-string">//</span>打包成<span class="hljs-string">.ipk</span>文件并安装到OpenWrt系统<br><br>在板子上: <br><span class="hljs-keyword">cd</span> <span class="hljs-string">/tmp/</span><br>tftp -g -r helloworld_1.0-1_ipq.ipk x.x.x.x   <span class="hljs-string">//tftp</span>传输<br>opkg install helloworld_1.0-1_ipq.ipk  <span class="hljs-string">//</span>通过opkg安装<br>helloworld  <span class="hljs-string">//</span>运行程序<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/08/27/hello-world/"/>
    <url>/2024/08/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
